// <auto-generated />
using System;
using Bolao.Infra.Persistence.EF;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Bolao.Infra.Migrations
{
    [DbContext(typeof(BolaoContext))]
    [Migration("20190811160857_novo")]
    partial class novo
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.8-servicing-32085")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("Bolao.Domain.Domains.Bank", b =>
                {
                    b.Property<int>("BankId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Name");

                    b.HasKey("BankId");

                    b.ToTable("Bank");
                });

            modelBuilder.Entity("Bolao.Domain.Domains.Buy", b =>
                {
                    b.Property<Guid>("BuyId")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("DateTime");

                    b.Property<Guid>("LotteryId");

                    b.Property<decimal>("Total")
                        .HasColumnType("decimal(5, 2)");

                    b.Property<int>("TotalTicket");

                    b.Property<decimal>("UnitPrice")
                        .HasColumnType("decimal(5, 2)");

                    b.Property<Guid>("UserId");

                    b.HasKey("BuyId");

                    b.HasIndex("LotteryId");

                    b.HasIndex("UserId");

                    b.ToTable("Buy");
                });

            modelBuilder.Entity("Bolao.Domain.Domains.ContactType", b =>
                {
                    b.Property<int>("ContactTypeId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Description");

                    b.HasKey("ContactTypeId");

                    b.ToTable("ContactTypes");
                });

            modelBuilder.Entity("Bolao.Domain.Domains.Lottery", b =>
                {
                    b.Property<Guid>("LoterryId")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("DateTime");

                    b.Property<DateTime>("EndDateBet")
                        .HasColumnType("DateTime");

                    b.Property<DateTime>("LotteryDateBet")
                        .HasColumnType("DateTime");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(5, 2)");

                    b.Property<DateTime>("StartDateBet")
                        .HasColumnType("DateTime");

                    b.Property<int>("StatusPagSeguro");

                    b.Property<int>("TypeBetId");

                    b.HasKey("LoterryId");

                    b.HasIndex("TypeBetId");

                    b.ToTable("Lottery");
                });

            modelBuilder.Entity("Bolao.Domain.Domains.LotteryNumberBet", b =>
                {
                    b.Property<int>("LotteryNumberBetId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Number");

                    b.Property<Guid>("TicketId");

                    b.HasKey("LotteryNumberBetId");

                    b.HasIndex("TicketId");

                    b.ToTable("LotteryNumberBet");
                });

            modelBuilder.Entity("Bolao.Domain.Domains.LotteryNumberResult", b =>
                {
                    b.Property<int>("LotteryNumberResultId")
                        .ValueGeneratedOnAdd();

                    b.Property<Guid>("LoterryId");

                    b.Property<string>("Number");

                    b.HasKey("LotteryNumberResultId");

                    b.HasIndex("LoterryId");

                    b.ToTable("LotteryNumberResult");
                });

            modelBuilder.Entity("Bolao.Domain.Domains.OwnerJackpot", b =>
                {
                    b.Property<int>("OwnerJackpotId")
                        .ValueGeneratedOnAdd();

                    b.Property<decimal>("Jackpot")
                        .HasColumnType("decimal(5, 2)");

                    b.Property<Guid>("LotteryId");

                    b.Property<decimal>("Profit")
                        .HasColumnType("decimal(5, 2)");

                    b.HasKey("OwnerJackpotId");

                    b.HasIndex("LotteryId");

                    b.ToTable("OwnerJackpot");
                });

            modelBuilder.Entity("Bolao.Domain.Domains.Ticket", b =>
                {
                    b.Property<Guid>("TicketId")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("BuyId");

                    b.Property<Guid?>("BuyId1");

                    b.HasKey("TicketId");

                    b.HasIndex("BuyId1");

                    b.ToTable("Ticket");
                });

            modelBuilder.Entity("Bolao.Domain.Domains.TypeBet", b =>
                {
                    b.Property<int>("TypeBetId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Description");

                    b.Property<string>("Title");

                    b.HasKey("TypeBetId");

                    b.ToTable("TypeBet");
                });

            modelBuilder.Entity("Bolao.Domain.Domains.User", b =>
                {
                    b.Property<Guid>("UserId")
                        .ValueGeneratedOnAdd();

                    b.Property<bool>("Active");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("DateTime");

                    b.Property<string>("FisrtName")
                        .IsRequired()
                        .HasMaxLength(15);

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(30);

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.HasKey("UserId");

                    b.ToTable("User");
                });

            modelBuilder.Entity("Bolao.Domain.Domains.UserContactType", b =>
                {
                    b.Property<int>("UserContactTypeId")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("ContactTypeId");

                    b.Property<Guid>("UserId");

                    b.HasKey("UserContactTypeId");

                    b.HasIndex("ContactTypeId");

                    b.HasIndex("UserId");

                    b.ToTable("UsersContactTypes");
                });

            modelBuilder.Entity("Bolao.Domain.Domains.UserSecurity", b =>
                {
                    b.Property<Guid>("UserSecurityId")
                        .ValueGeneratedOnAdd();

                    b.Property<Guid>("TokenCreateConfirmed");

                    b.Property<Guid>("TokenForgotPassword");

                    b.Property<Guid>("UserId");

                    b.HasKey("UserSecurityId");

                    b.HasIndex("UserId")
                        .IsUnique();

                    b.ToTable("UserSecurity");
                });

            modelBuilder.Entity("Bolao.Domain.Domains.WinnerJackpot", b =>
                {
                    b.Property<int>("WinnerJackpotId")
                        .ValueGeneratedOnAdd();

                    b.Property<decimal>("JackPot")
                        .HasColumnType("decimal(5, 2)");

                    b.Property<Guid>("LotteryId");

                    b.Property<Guid>("UserId");

                    b.HasKey("WinnerJackpotId");

                    b.HasIndex("LotteryId");

                    b.HasIndex("UserId");

                    b.ToTable("WinnerJackpot");
                });

            modelBuilder.Entity("Bolao.Domain.Domains.Buy", b =>
                {
                    b.HasOne("Bolao.Domain.Domains.Lottery", "Lottery")
                        .WithMany()
                        .HasForeignKey("LotteryId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Bolao.Domain.Domains.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Bolao.Domain.Domains.Lottery", b =>
                {
                    b.HasOne("Bolao.Domain.Domains.TypeBet", "TypeBet")
                        .WithMany()
                        .HasForeignKey("TypeBetId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Bolao.Domain.Domains.LotteryNumberBet", b =>
                {
                    b.HasOne("Bolao.Domain.Domains.Ticket", "Ticket")
                        .WithMany()
                        .HasForeignKey("TicketId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Bolao.Domain.Domains.LotteryNumberResult", b =>
                {
                    b.HasOne("Bolao.Domain.Domains.Lottery", "Lottery")
                        .WithMany("ListNumbersResult")
                        .HasForeignKey("LoterryId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Bolao.Domain.Domains.OwnerJackpot", b =>
                {
                    b.HasOne("Bolao.Domain.Domains.Lottery", "Lottery")
                        .WithMany()
                        .HasForeignKey("LotteryId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Bolao.Domain.Domains.Ticket", b =>
                {
                    b.HasOne("Bolao.Domain.Domains.Buy", "Buy")
                        .WithMany()
                        .HasForeignKey("BuyId1");
                });

            modelBuilder.Entity("Bolao.Domain.Domains.User", b =>
                {
                    b.OwnsOne("Bolao.Domain.ObjectValue.Email", "Email", b1 =>
                        {
                            b1.Property<Guid>("UserId");

                            b1.Property<string>("EmailAddress")
                                .IsRequired()
                                .HasColumnName("Email")
                                .HasMaxLength(80);

                            b1.ToTable("User");

                            b1.HasOne("Bolao.Domain.Domains.User")
                                .WithOne("Email")
                                .HasForeignKey("Bolao.Domain.ObjectValue.Email", "UserId")
                                .OnDelete(DeleteBehavior.Cascade);
                        });
                });

            modelBuilder.Entity("Bolao.Domain.Domains.UserContactType", b =>
                {
                    b.HasOne("Bolao.Domain.Domains.ContactType", "ContactType")
                        .WithMany("UsersContactTypes")
                        .HasForeignKey("ContactTypeId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Bolao.Domain.Domains.User", "User")
                        .WithMany("UsersContactTypes")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Bolao.Domain.Domains.UserSecurity", b =>
                {
                    b.HasOne("Bolao.Domain.Domains.User", "User")
                        .WithOne("UserSecurity")
                        .HasForeignKey("Bolao.Domain.Domains.UserSecurity", "UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Bolao.Domain.Domains.WinnerJackpot", b =>
                {
                    b.HasOne("Bolao.Domain.Domains.Lottery", "Lottery")
                        .WithMany()
                        .HasForeignKey("LotteryId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Bolao.Domain.Domains.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
